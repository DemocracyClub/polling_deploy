---
- hosts: servers
  vars_files:
    - vars.yml
    # We want the vault to be loaded conditionally, so we do if via the
    # `--extra-args` command line flag
    # - @vault.yml
  gather_facts: true
  become: true
  become_user: "{{ project_name }}"

  tasks:
  - name: Set addressbase tmp path
    set_fact:
      addressbase_tmp_path: '/tmp/addressbase'

  - name: Set ONSAD tmp path
    set_fact:
      onsad_tmp_path: '/tmp/onsad'

  - name: Create the addressbase tmp dir
    file: state=directory path={{ addressbase_tmp_path }}

  - name: Download addressbase from S3
    command: "aws s3 --region={{ build_region }} sync s3://pollingstations-packer-assets/addressbase/{{ addressbase_folder_name }} {{ addressbase_tmp_path }}"

  - name: Unzip addressbase
    shell: "unzip \\*.zip"
    args:
      chdir: "{{ addressbase_tmp_path }}"

  - name: Clean addressbase
    shell: "{{ project_root }}/env/bin/python {{ project_root }}/code/manage.py clean_addressbase {{ addressbase_tmp_path }}"

  - name: Import cleaned addresses
    shell: "{{ project_root }}/env/bin/python {{ project_root }}/code/manage.py import_cleaned_addresses {{ addressbase_tmp_path }}"

  - name: Delete addressbase tmp files
    file:
      state: absent
      path: "{{ addressbase_tmp_path }}"

  - name: Create the ONSAD tmp dir
    file: state=directory path={{ onsad_tmp_path }}

  - name: Download ONSAD
    get_url:
      url: "{{ onsad_url }}"
      dest: "{{ onsad_tmp_path }}"

  - name: Unzip ONSAD
    shell: "unzip \\*.zip"
    args:
      chdir: "{{ onsad_tmp_path }}"

  - name: Import ONSAD
    shell: "{{ project_root }}/env/bin/python {{ project_root }}/code/manage.py import_onsad {{ onsad_tmp_path }}/Data"

  - name: Create postcode blacklist
    shell: "{{ project_root }}/env/bin/python {{ project_root }}/code/manage.py create_blacklist"

  - name: Delete ONSAD tmp files
    file:
      state: absent
      path: "{{ onsad_tmp_path }}"
